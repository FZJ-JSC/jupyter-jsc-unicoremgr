stages:
  - unittest
  - build-devel
  - build-tag

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "devel"
      variables:
        RUN_UNIT_TESTS: "True"
        RUN_BUILD_DEVEL: "True"
    - if: $CI_COMMIT_TAG
      variables:
        RUN_UNIT_TESTS: "True"
        RUN_BUILD_DEVEL: "True"
    - when: never


unittests:
  stage: unittest
  image:
    name: python:alpine3.14
  before_script:
    - pip3 install -U pip && pip3 install -r ${CI_PROJECT_DIR}/devel/requirements_build.txt
  script:
    - cd ${CI_PROJECT_DIR} && pytest -c ${CI_PROJECT_DIR}/web/tests/logs/pytest.ini
    - cd ${CI_PROJECT_DIR} && pytest -c ${CI_PROJECT_DIR}/web/tests/services/pytest.ini
  rules:
    - if: $RUN_UNIT_TESTS == "True"

build-devel:
  stage: build-devel
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - sed -i -e "s/<VERSION>/${CI_COMMIT_TAG} (${CI_COMMIT_SHORT_SHA})/g" ${CI_PROJECT_DIR}/web/logs/apps.py
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile ${CI_PROJECT_DIR}/devel/Dockerfile --cache=true --cache-copy-layers=true --destination ${CI_REGISTRY_IMAGE}:devel
  rules:
    - if: $RUN_BUILD_DEVEL == "True"

build-tag:
  stage: build-tag
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - sed -i -e "s/<VERSION>/${CI_COMMIT_TAG} (${CI_COMMIT_SHORT_SHA})/g" ${CI_PROJECT_DIR}/web/logs/apps.py
    - /kaniko/executor --context ${CI_PROJECT_DIR} --cache=true --cache-copy-layers=true --destination ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} --destination ${CI_REGISTRY_IMAGE}:latest
  rules:
    - if: $CI_COMMIT_TAG
